// Generated by Apple Swift version 4.0.2 effective-3.2.2 (swiftlang-900.0.69.2 clang-900.0.38)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import Mapbox;
@import Pulley;
@import MapboxCoreNavigation;
@import AVFoundation;
@import AWSCore;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("MapboxNavigation")
@class NSCoder;

/// :nodoc:
SWIFT_CLASS_NAMED("StylableLabel")
@interface MBStylableLabel : UILabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("ArrivalTimeLabel")
@interface MBArrivalTimeLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@class UIColor;

/// :nodoc:
SWIFT_CLASS_NAMED("StylableButton")
@interface MBStylableButton : UIButton
@property (nonatomic, strong) UIColor * _Nonnull textColor;
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
@property (nonatomic) CGFloat borderWidth;
@property (nonatomic) CGFloat cornerRadius;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
/// <code>MBButton</code> sets the tintColor according to the style.
SWIFT_CLASS_NAMED("Button")
@interface MBButton : MBStylableButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("CancelButton")
@interface MBCancelButton : MBButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("CellSubtitleLabel")
@interface MBCellSubtitleLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("CellTitleLabel")
@interface MBCellTitleLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class MBRouteStep;

SWIFT_CLASS_NAMED("TurnArrowView")
@interface MBTurnArrowView : UIView
@property (nonatomic, strong) UIColor * _Nonnull primaryColor;
@property (nonatomic, strong) UIColor * _Nonnull secondaryColor;
@property (nonatomic, strong) MBRouteStep * _Nullable step;
@property (nonatomic) BOOL isStart;
@property (nonatomic) BOOL isEnd;
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("CellTurnArrowView")
@interface MBCellTurnArrowView : MBTurnArrowView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("LineView")
@interface MBLineView : UIView
@property (nonatomic, strong) UIColor * _Nonnull lineColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DashedLineView")
@interface MBDashedLineView : MBLineView
@property (nonatomic) CGFloat dashedLength;
@property (nonatomic) CGFloat dashedGap;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



enum MBStyleType : NSInteger;

/// <code>Style</code> is a convenient wrapper for styling the appearance of various interface components throughout the Navigation UI.
/// Styles are applied globally using <code>UIAppearance</code>. You should call <code>Style.apply()</code> to apply the style to the <code>NavigationViewController</code>.
SWIFT_CLASS_NAMED("Style")
@interface MBStyle : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// General styling
/// Sets the tint color for guidance arrow, highlighted text, progress bar and more.
@property (nonatomic, strong) UIColor * _Nullable tintColor;
/// Sets the font family for all labels.
@property (nonatomic, copy) NSString * _Nullable fontFamily;
/// Describes the situations in which the style should be used. By default, the style will be used during the daytime.
@property (nonatomic) enum MBStyleType styleType;
/// Map style to be used for the style.
@property (nonatomic, copy) NSURL * _Nonnull mapStyleURL;
/// Applies the style for all changed properties.
- (void)apply;
@end


/// <code>DefaultStyle</code> is default style for Mapbox Navigation SDK.
SWIFT_CLASS("_TtC16MapboxNavigation8DayStyle")
@interface DayStyle : MBStyle
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)apply;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("DestinationLabel")
@interface MBDestinationLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("DistanceLabel")
@interface MBDistanceLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("DistanceRemainingLabel")
@interface MBDistanceRemainingLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("FloatingButton")
@interface MBFloatingButton : MBButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
/// <code>HighlightedButton</code> sets the button’s titleColor for normal control state according to the style in addition to the styling behavior inherited from
/// <code>Button</code>.
SWIFT_CLASS_NAMED("HighlightedButton")
@interface MBHighlightedButton : MBButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("LaneArrowView")
@interface MBLaneArrowView : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic, strong) UIColor * _Nonnull primaryColor;
@property (nonatomic, strong) UIColor * _Nonnull secondaryColor;
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("LanesView")
@interface MBLanesView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@interface MGLMapView (SWIFT_EXTENSION(MapboxNavigation))
/// Toggle traffic on a map style that contains a Mapbox Traffic source.
@property (nonatomic) BOOL showsTraffic;
@end




/// :nodoc:
SWIFT_CLASS_NAMED("ManeuverView")
@interface MBManeuverView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("MarkerView")
@interface MBMarkerView : UIView
@property (nonatomic, strong) UIColor * _Nonnull innerColor;
@property (nonatomic, strong) UIColor * _Nonnull shadowColor;
@property (nonatomic, strong) UIColor * _Nonnull pinColor;
@property (nonatomic, strong) UIColor * _Nonnull strokeColor;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)layoutSubviews;
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol MGLMapViewDelegate;
@protocol NavigationMapViewDelegate;
@class CLLocationManager;
@class CLLocation;
@class MBRoute;

/// <code>NavigationMapView</code> is a subclass of <code>MGLMapView</code> with convenience functions for adding <code>Route</code> lines to a map.
SWIFT_CLASS_NAMED("NavigationMapView")
@interface MBNavigationMapView : MGLMapView
@property (nonatomic, strong) UIColor * _Nonnull trafficUnknownColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficLowColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficModerateColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficHeavyColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficSevereColor;
@property (nonatomic, strong) UIColor * _Nonnull routeCasingColor;
@property (nonatomic, strong) id <MGLMapViewDelegate> _Nullable delegate;
@property (nonatomic, weak) id <NavigationMapViewDelegate> _Nullable navigationMapDelegate;
@property (nonatomic) BOOL showsUserLocation;
- (void)locationManager:(CLLocationManager * _Null_unspecified)manager didUpdateLocations:(NSArray<CLLocation *> * _Null_unspecified)locations;
- (void)validateLocationServices;
/// Removes route line and route line casing from map
- (void)removeRoute;
/// Adds the route waypoints to the map given the current leg index. Previous waypoints for completed legs will be omitted.
- (void)showWaypoints:(MBRoute * _Nonnull)route legIndex:(NSInteger)legIndex;
/// Removes all waypoints from the map.
- (void)removeWaypoints;
/// Shows the step arrow given the current <code>RouteProgress</code>.
- (void)addArrowWithRoute:(MBRoute * _Nonnull)route legIndex:(NSInteger)legIndex stepIndex:(NSInteger)stepIndex;
/// Removes the step arrow from the map.
- (void)removeArrow;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame styleURL:(NSURL * _Nullable)styleURL OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class MGLSource;
@class MGLStyleLayer;
@class MGLShape;
@class MBWaypoint;

SWIFT_PROTOCOL("_TtP16MapboxNavigation25NavigationMapViewDelegate_")
@protocol NavigationMapViewDelegate
@optional
- (CLLocation * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView shouldUpdateToLocation:(CLLocation * _Nonnull)location SWIFT_WARN_UNUSED_RESULT;
- (MGLStyleLayer * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView routeStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(MGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (MGLStyleLayer * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView waypointStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(MGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (MGLStyleLayer * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView waypointSymbolStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(MGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (MGLStyleLayer * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView routeCasingStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(MGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (MGLShape * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView shapeDescribingRoute:(MBRoute * _Nonnull)route SWIFT_WARN_UNUSED_RESULT;
- (MGLShape * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView simplifiedShapeDescribingRoute:(MBRoute * _Nonnull)route SWIFT_WARN_UNUSED_RESULT;
- (MGLShape * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView shapeDescribingWaypoints:(NSArray<MBWaypoint *> * _Nonnull)waypoints SWIFT_WARN_UNUSED_RESULT;
@end

@class UIViewController;

SWIFT_CLASS_NAMED("NavigationPulleyViewController")
@interface MBNavigationPulleyViewController : PulleyViewController
- (nonnull instancetype)initWithContentViewController:(UIViewController * _Nonnull)contentViewController drawerViewController:(UIViewController * _Nonnull)drawerViewController OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol MGLAnnotation;
@class MBDirections;
@class MGLMapCamera;
@protocol MBNavigationViewControllerDelegate;
@class MBRouteVoiceController;
@class MBRouteController;
@class MBNavigationLocationManager;
@class UIStoryboardSegue;

/// <code>NavigationViewController</code> is fully featured, turn by turn navigation UI.
/// It provides step by step instructions, an overview of all steps for the given route and support for basic styling.
SWIFT_CLASS_NAMED("NavigationViewController")
@interface MBNavigationViewController : MBNavigationPulleyViewController
/// \code
/// A `Route` object constructed by [MapboxDirections](https://mapbox.github.io/mapbox-navigation-ios/directions/).
///
/// In cases where you need to update the route after navigation has started you can set a new `route` here and `NavigationViewController` will update its UI accordingly.
///
/// \endcode
@property (nonatomic, strong) MBRoute * _Null_unspecified route;
/// \code
/// An instance of `MGLAnnotation` that will be shown on on the destination of your route. The last coordinate of the route will be used if no destination is given.
///
/// \endcode
@property (nonatomic, strong) id <MGLAnnotation> _Null_unspecified destination;
/// An instance of <code>Directions</code> need for rerouting. See <a href="https://mapbox.github.io/mapbox-navigation-ios/directions/">Mapbox Directions</a> for further information.
@property (nonatomic, strong) MBDirections * _Null_unspecified directions;
/// An optional <code>MGLMapCamera</code> you can use to improve the initial transition from a previous viewport and prevent a trigger from an excessive significant location update.
@property (nonatomic, strong) MGLMapCamera * _Nullable pendingCamera;
/// An instance of <code>MGLAnnotation</code> representing the origin of your route.
@property (nonatomic, strong) id <MGLAnnotation> _Nullable origin;
/// The receiver’s delegate.
@property (nonatomic, weak) id <MBNavigationViewControllerDelegate> _Nullable navigationDelegate;
/// Provides access to various speech synthesizer options.
/// See <code>RouteVoiceController</code> for more information.
@property (nonatomic, strong) MBRouteVoiceController * _Nullable voiceController;
/// Provides all routing logic for the user.
/// See <code>RouteController</code> for more information.
@property (nonatomic, strong) MBRouteController * _Null_unspecified routeController;
/// Styles that will be used for various system traits.
/// See <code>Style</code> and <code>DefaultStyle</code> for more information.
@property (nonatomic, copy) NSArray<MBStyle *> * _Nullable styles;
/// Provides access to the navigation’s <code>MGLMapView</code> with all its styling capabilities.
/// Note that you should not change the <code>mapView</code>’s delegate.
@property (nonatomic, readonly, strong) MGLMapView * _Nullable mapView;
/// Determines whether the user location annotation is moved from the raw user location reported by the device to the nearest location along the route.
/// By default, this property is set to <code>true</code>, causing the user location annotation to be snapped to the route.
@property (nonatomic) BOOL snapsUserLocationAnnotationToRoute;
/// Toggles sending of UILocalNotification upon upcoming steps when application is in the background. Defaults to <code>true</code>.
@property (nonatomic) BOOL sendNotifications;
/// Shows a button that allows drivers to report feedback such as accidents, closed roads,  poor instructions, etc. Defaults to <code>false</code>.
@property (nonatomic) BOOL showsReportFeedback;
/// If true, the map style and UI will automatically be updated given the time of day.
@property (nonatomic) BOOL automaticallyAdjustsStyleForTimeOfDay;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithContentViewController:(UIViewController * _Nonnull)contentViewController drawerViewController:(UIViewController * _Nonnull)drawerViewController OBJC_DESIGNATED_INITIALIZER;
/// Initializes a <code>NavigationViewController</code> that provides turn by turn navigation for the given route. A optional <code>direction</code> object is needed for  potential rerouting.
/// See <a href="https://mapbox.github.io/mapbox-navigation-ios/directions/">Mapbox Directions</a> for further information.
- (nonnull instancetype)initWithRoute:(MBRoute * _Nonnull)route directions:(MBDirections * _Nonnull)directions style:(NSArray<MBStyle *> * _Nullable)styles locationManager:(MBNavigationLocationManager * _Nullable)locationManager OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
@end




@interface MBNavigationViewController (SWIFT_EXTENSION(MapboxNavigation)) <PulleyDelegate>
- (void)drawerPositionDidChangeWithDrawer:(PulleyViewController * _Nonnull)drawer;
@end


@interface MBNavigationViewController (SWIFT_EXTENSION(MapboxNavigation)) <MBRouteControllerDelegate>
- (BOOL)routeController:(MBRouteController * _Nonnull)routeController shouldRerouteFromLocation:(CLLocation * _Nonnull)location SWIFT_WARN_UNUSED_RESULT;
- (BOOL)routeController:(MBRouteController * _Nonnull)routeController shouldIncrementLegWhenArrivingAtWaypoint:(MBWaypoint * _Nonnull)waypoint SWIFT_WARN_UNUSED_RESULT;
- (void)routeController:(MBRouteController * _Nonnull)routeController willRerouteFromLocation:(CLLocation * _Nonnull)location;
- (void)routeController:(MBRouteController * _Nonnull)routeController didRerouteAlongRoute:(MBRoute * _Nonnull)route;
- (void)routeController:(MBRouteController * _Nonnull)routeController didFailToRerouteWithError:(NSError * _Nonnull)error;
- (void)routeController:(MBRouteController * _Nonnull)routeController didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)routeController:(MBRouteController * _Nonnull)routeController didDiscardLocation:(CLLocation * _Nonnull)location;
@end

@class MGLAnnotationImage;
@class MGLAnnotationView;

/// The <code>NavigationViewControllerDelegate</code> provides methods for configuring the map view shown by a <code>NavigationViewController</code> and responding to the cancellation of a navigation session.
SWIFT_PROTOCOL_NAMED("NavigationViewControllerDelegate")
@protocol MBNavigationViewControllerDelegate
@optional
/// Called when the user exits a route and dismisses the navigation view controller by tapping the Cancel button.
- (void)navigationViewControllerDidCancelNavigation:(MBNavigationViewController * _Nonnull)navigationViewController;
/// Called when the user arrives at the destination.
- (void)navigationViewController:(MBNavigationViewController * _Nonnull)navigationViewController didArriveAt:(MBWaypoint * _Nonnull)waypoint;
/// Returns whether the navigation view controller should be allowed to calculate a new route.
/// If implemented, this method is called as soon as the navigation view controller detects that the user is off the predetermined route. Implement this method to conditionally prevent rerouting. If this method returns <code>true</code>, <code>navigationViewController(_:willRerouteFrom:)</code> will be called immediately afterwards.
/// \param navigationViewController The navigation view controller that has detected the need to calculate a new route.
///
/// \param location The user’s current location.
///
///
/// returns:
/// True to allow the navigation view controller to calculate a new route; false to keep tracking the current route.
- (BOOL)navigationViewController:(MBNavigationViewController * _Nonnull)navigationViewController shouldRerouteFromLocation:(CLLocation * _Nonnull)location SWIFT_WARN_UNUSED_RESULT;
- (BOOL)navigationViewController:(MBNavigationViewController * _Nonnull)navigationViewController shouldIncrementLegWhenArrivingAtWaypoint:(MBWaypoint * _Nonnull)waypoint SWIFT_WARN_UNUSED_RESULT;
/// Called immediately before the navigation view controller calculates a new route.
/// This method is called after <code>navigationViewController(_:shouldRerouteFrom:)</code> is called, simultaneously with the <code>RouteControllerWillReroute</code> notification being posted, and before <code>navigationViewController(_:didRerouteAlong:)</code> is called.
/// \param navigationViewController The navigation view controller that will calculate a new route.
///
/// \param location The user’s current location.
///
- (void)navigationViewController:(MBNavigationViewController * _Nonnull)navigationViewController willRerouteFromLocation:(CLLocation * _Nonnull)location;
/// Called immediately after the navigation view controller receives a new route.
/// This method is called after <code>navigationViewController(_:willRerouteFrom:)</code> and simultaneously with the <code>RouteControllerDidReroute</code> notification being posted.
/// \param navigationViewController The navigation view controller that has calculated a new route.
///
/// \param route The new route.
///
- (void)navigationViewController:(MBNavigationViewController * _Nonnull)navigationViewController didRerouteAlongRoute:(MBRoute * _Nonnull)route;
/// Called when the navigation view controller fails to receive a new route.
/// This method is called after <code>navigationViewController(_:willRerouteFrom:)</code> and simultaneously with the <code>RouteControllerDidFailToReroute</code> notification being posted.
/// \param navigationViewController The navigation view controller that has calculated a new route.
///
/// \param error An error raised during the process of obtaining a new route.
///
- (void)navigationViewController:(MBNavigationViewController * _Nonnull)navigationViewController didFailToRerouteWithError:(NSError * _Nonnull)error;
/// Returns an <code>MGLStyleLayer</code> that determines the appearance of the route line.
/// If this method is unimplemented, the navigation map view draws the route line using an <code>MGLLineStyleLayer</code>.
- (MGLStyleLayer * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView routeStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(MGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// Returns an <code>MGLStyleLayer</code> that determines the appearance of the route line’s casing.
/// If this method is unimplemented, the navigation map view draws the route line’s casing using an <code>MGLLineStyleLayer</code> whose width is greater than that of the style layer returned by <code>navigationMapView(_:routeStyleLayerWithIdentifier:source:)</code>.
- (MGLStyleLayer * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView routeCasingStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(MGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// Returns an <code>MGLShape</code> that represents the path of the route line.
/// If this method is unimplemented, the navigation map view represents the route line using an <code>MGLPolylineFeature</code> based on <code>route</code>’s <code>coordinates</code> property.
- (MGLShape * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView shapeDescribing:(MBRoute * _Nonnull)route SWIFT_WARN_UNUSED_RESULT;
/// Returns an <code>MGLShape</code> that represents the path of the route line’s casing.
/// If this method is unimplemented, the navigation map view represents the route line’s casing using an <code>MGLPolylineFeature</code> identical to the one returned by <code>navigationMapView(_:shapeDescribing:)</code>.
- (MGLShape * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView simplifiedShapeDescribing:(MBRoute * _Nonnull)route SWIFT_WARN_UNUSED_RESULT;
- (MGLStyleLayer * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView waypointStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(MGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (MGLStyleLayer * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView waypointSymbolStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(MGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// Returns an <code>MGLShape</code> that represents the destination waypoints along the route (that is, excluding the origin).
/// If this method is unimplemented, the navigation map view represents the route waypoints using <code>navigationMapView(_:shapeFor:)</code>.
- (MGLShape * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView shapeFor:(NSArray<MBWaypoint *> * _Nonnull)waypoints SWIFT_WARN_UNUSED_RESULT;
/// Return an <code>MGLAnnotationImage</code> that represents the destination marker.
/// If this method is unimplemented, the navigation map view will represent the destination annotation with the default marker.
- (MGLAnnotationImage * _Nullable)navigationMapView:(MGLMapView * _Nonnull)mapView imageFor:(id <MGLAnnotation> _Nonnull)annotation SWIFT_WARN_UNUSED_RESULT;
/// Returns a view object to mark the given point annotation object on the map.
/// The user location annotation view can also be customized via this method. When annotation is an instance of <code>MGLUserLocation</code>, return an instance of <code>MGLUserLocationAnnotationView</code> (or a subclass thereof).
- (MGLAnnotationView * _Nullable)navigationMapView:(MGLMapView * _Nonnull)mapView viewFor:(id <MGLAnnotation> _Nonnull)annotation SWIFT_WARN_UNUSED_RESULT;
/// Called when the user opens the feedback form.
- (void)navigationViewControllerDidOpenFeedback:(MBNavigationViewController * _Nonnull)viewController;
/// Called when the user dismisses the feedback form.
- (void)navigationViewControllerDidCancelFeedback:(MBNavigationViewController * _Nonnull)viewController;
/// Called when the user sends feedback.
/// \param viewController The navigation view controller that reported the feedback.
///
/// \param feedbackId A UUID string used to identify the feedback event.
///
/// \param feedbackType The type of feedback event that was sent.
///
- (void)navigationViewController:(MBNavigationViewController * _Nonnull)viewController didSend:(NSString * _Nonnull)feedbackId feedbackType:(enum MBFeedbackType)feedbackType;
@end


/// <code>NightStyle</code> is default night style for Mapbox Navigation SDK. Only will be applied when necessary and if <code>automaticallyAdjustStyleForSunPosition</code>.
SWIFT_CLASS("_TtC16MapboxNavigation10NightStyle")
@interface NightStyle : DayStyle
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)apply;
@end

@class AVAudioPlayer;
@class AVSpeechSynthesizer;
@class AVSpeechUtterance;
@class NSNotification;

/// The <code>RouteVoiceController</code> class provides voice guidance.
SWIFT_CLASS_NAMED("RouteVoiceController")
@interface MBRouteVoiceController : NSObject <AVAudioPlayerDelegate, AVSpeechSynthesizerDelegate>
/// A boolean value indicating whether instructions should be announced by voice or not.
@property (nonatomic) BOOL isEnabled;
/// Volume of announcements.
@property (nonatomic) float volume;
/// SSML option which controls at which speed Polly instructions are read.
@property (nonatomic) double instructionVoiceSpeedRate;
/// SSML option that specifies the voice loudness.
@property (nonatomic, copy) NSString * _Nonnull instructionVoiceVolume;
/// If true, a noise indicating the user is going to be rerouted will play prior to rerouting.
@property (nonatomic) BOOL playRerouteSound;
/// Sound to play prior to reroute. Inherits volume level from <code>volume</code>.
@property (nonatomic, strong) AVAudioPlayer * _Nonnull rerouteSoundPlayer;
/// Buffer time between announcements. After an announcement is given any announcement given within this <code>TimeInterval</code> will be suppressed.
@property (nonatomic) NSTimeInterval bufferBetweenAnnouncements;
/// Default initializer for <code>RouteVoiceController</code>.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer * _Nonnull)player successfully:(BOOL)flag;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didFinishSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)alertLevelDidChangeWithNotification:(NSNotification * _Nonnull)notification;
@end


/// <code>PollyVoiceController</code> extends the default <code>RouteVoiceController</code> by providing support for AWSPolly. <code>RouteVoiceController</code> will be used as a fallback during poor network conditions.
SWIFT_CLASS_NAMED("PollyVoiceController")
@interface MBPollyVoiceController : MBRouteVoiceController
/// <code>regionType</code> specifies what AWS region to use for Polly.
@property (nonatomic) AWSRegionType regionType;
/// <code>identityPoolId</code> is a required value for using AWS Polly voice instead of iOS’s built in AVSpeechSynthesizer.
/// You can get a token here: http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-auth-aws-identity-for-ios.html
@property (nonatomic, copy) NSString * _Nonnull identityPoolId;
/// Number of seconds a Polly request can wait before it is canceled and the default speech synthesizer speaks the instruction.
@property (nonatomic) NSTimeInterval timeoutIntervalForRequest;
- (nonnull instancetype)initWithIdentityPoolId:(NSString * _Nonnull)identityPoolId OBJC_DESIGNATED_INITIALIZER;
- (void)alertLevelDidChangeWithNotification:(NSNotification * _Nonnull)notification;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("ProgressBar")
@interface MBProgressBar : UIView
@property (nonatomic, strong) UIColor * _Nonnull barColor;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("ResumeButton")
@interface MBResumeButton : UIControl
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForInterfaceBuilder;
@end


SWIFT_CLASS_NAMED("RouteTableViewHeaderView")
@interface MBRouteTableViewHeaderView : UIView
- (void)awakeFromNib;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// :nodoc:
SWIFT_CLASS_NAMED("SeparatorView")
@interface MBSeparatorView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("StatusView")
@interface MBStatusView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC16MapboxNavigation14StyleKitArrows")
@interface StyleKitArrows : NSObject
/// / Drawing Methods
+ (void)drawArrow180WithPrimaryColor:(UIColor * _Nonnull)primaryColor scale:(CGFloat)scale;
+ (void)drawArrow45WithPrimaryColor:(UIColor * _Nonnull)primaryColor scale:(CGFloat)scale;
+ (void)drawArrow30WithPrimaryColor:(UIColor * _Nonnull)primaryColor scale:(CGFloat)scale;
+ (void)drawArrow0WithPrimaryColor:(UIColor * _Nonnull)primaryColor scale:(CGFloat)scale;
+ (void)drawArrow75WithPrimaryColor:(UIColor * _Nonnull)primaryColor scale:(CGFloat)scale;
+ (void)drawArriverightWithPrimaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor scale:(CGFloat)scale;
+ (void)drawArriveWithPrimaryColor:(UIColor * _Nonnull)primaryColor scale:(CGFloat)scale;
+ (void)drawStartingWithPrimaryColor:(UIColor * _Nonnull)primaryColor scale:(CGFloat)scale;
+ (void)drawDestinationWithPrimaryColor:(UIColor * _Nonnull)primaryColor scale:(CGFloat)scale;
+ (void)drawMergeWithPrimaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor scale:(CGFloat)scale;
+ (void)drawRoundaboutWithPrimaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor scale:(CGFloat)scale;
+ (void)drawForkWithPrimaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor scale:(CGFloat)scale;
+ (void)drawOfframpWithPrimaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor scale:(CGFloat)scale;
+ (void)drawRoundabout_180WithPrimaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor scale:(CGFloat)scale;
+ (void)drawRoundabout_45WithPrimaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor scale:(CGFloat)scale;
+ (void)drawRoundabout_315WithPrimaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor scale:(CGFloat)scale;
+ (void)drawRoundabout_275WithPrimaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor scale:(CGFloat)scale;
+ (void)drawRoundabout_90WithPrimaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor scale:(CGFloat)scale;
+ (void)drawLane_straightWithPrimaryColor:(UIColor * _Nonnull)primaryColor;
+ (void)drawLane_right_hWithPrimaryColor:(UIColor * _Nonnull)primaryColor;
+ (void)drawLane_straight_rightWithPrimaryColor:(UIColor * _Nonnull)primaryColor;
+ (void)drawLane_right_onlyWithPrimaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor;
+ (void)drawLane_straight_onlyWithPrimaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor;
+ (void)drawLane_uturnWithPrimaryColor:(UIColor * _Nonnull)primaryColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16MapboxNavigation14StyleKitMarker")
@interface StyleKitMarker : NSObject
/// / Drawing Methods
+ (void)drawMarkerWithFrame:(CGRect)frame innerColor:(UIColor * _Nonnull)innerColor shadowColor:(UIColor * _Nonnull)shadowColor pinColor:(UIColor * _Nonnull)pinColor strokeColor:(UIColor * _Nonnull)strokeColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, MBStyleType, "StyleType") {
  MBStyleTypeDayStyle = 0,
  MBStyleTypeNightStyle = 1,
};


/// :nodoc:
SWIFT_CLASS_NAMED("SubtitleLabel")
@interface MBSubtitleLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("TimeRemainingLabel")
@interface MBTimeRemainingLabel : MBStylableLabel
@property (nonatomic, strong) UIColor * _Nonnull trafficUnknownColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficLowColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficModerateColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficHeavyColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficSevereColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("TitleLabel")
@interface MBTitleLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end







@interface UIFont (SWIFT_EXTENSION(MapboxNavigation))
/// Returns an adjusted font for the <code>preferredContentSizeCategory</code>.
@property (nonatomic, readonly, strong) UIFont * _Nonnull adjustedFont;
@end








/// :nodoc:
SWIFT_CLASS_NAMED("WayNameLabel")
@interface MBWayNameLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("WayNameView")
@interface MBWayNameView : UIView
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
